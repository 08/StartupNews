<?xml version="1.0" encoding="UTF-8"?>
<project name="module_startupnewstest" default="compile.module.startupnewstest">
  <dirname property="module.startupnewstest.basedir" file="${ant.file.module_startupnewstest}"/>
  
  <property name="module.jdk.home.startupnewstest" value="${jdk.home.android_4.0_platform}"/>
  <property name="module.jdk.bin.startupnewstest" value="${jdk.bin.android_4.0_platform}"/>
  <property name="module.jdk.classpath.startupnewstest" value="jdk.classpath.android_4.0_platform"/>
  
  <property name="compiler.args.startupnewstest" value="${compiler.args}"/>
  
  <property name="startupnewstest.output.dir" value="${module.startupnewstest.basedir}/../out/production/StartupNewsTest"/>
  <property name="startupnewstest.testoutput.dir" value="${module.startupnewstest.basedir}/../out/test/StartupNewsTest"/>
  
  <path id="startupnewstest.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="startupnewstest.module.production.classpath">
    <path refid="${module.jdk.classpath.startupnewstest}"/>
    <path refid="library.libs.classpath"/>
    <pathelement location="${startupnews.output.dir}"/>
  </path>
  
  <path id="startupnewstest.runtime.production.module.classpath">
    <pathelement location="${startupnewstest.output.dir}"/>
    <path refid="library.libs.classpath"/>
    <path refid="startupnews.runtime.production.module.classpath"/>
  </path>
  
  <path id="startupnewstest.module.classpath">
    <path refid="${module.jdk.classpath.startupnewstest}"/>
    <pathelement location="${startupnewstest.output.dir}"/>
    <path refid="library.libs.classpath"/>
    <pathelement location="${startupnews.testoutput.dir}"/>
    <pathelement location="${startupnews.output.dir}"/>
  </path>
  
  <path id="startupnewstest.runtime.module.classpath">
    <pathelement location="${startupnewstest.testoutput.dir}"/>
    <pathelement location="${startupnewstest.output.dir}"/>
    <path refid="library.libs.classpath"/>
    <path refid="startupnews.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.startupnewstest">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.startupnewstest">
    <patternset refid="excluded.from.module.startupnewstest"/>
  </patternset>
  
  <path id="startupnewstest.module.sourcepath">
    <dirset dir="${module.startupnewstest.basedir}">
      <include name="gen"/>
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.startupnewstest" depends="compile.module.startupnewstest.production,compile.module.startupnewstest.tests" description="Compile module StartupNewsTest"/>
  
  <target name="compile.module.startupnewstest.production" depends="register.custom.compilers,compile.module.startupnews" description="Compile module StartupNewsTest; production classes">
    <mkdir dir="${startupnewstest.output.dir}"/>
    <javac2 destdir="${startupnewstest.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.startupnewstest}/javac">
      <compilerarg line="${compiler.args.startupnewstest}"/>
      <bootclasspath refid="startupnewstest.module.bootclasspath"/>
      <classpath refid="startupnewstest.module.production.classpath"/>
      <src refid="startupnewstest.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.startupnewstest"/>
    </javac2>
    
    <copy todir="${startupnewstest.output.dir}">
      <fileset dir="${module.startupnewstest.basedir}/gen">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.startupnewstest.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.startupnewstest.tests" depends="register.custom.compilers,compile.module.startupnewstest.production" description="compile module StartupNewsTest; test classes" unless="skip.tests"/>
  
  <target name="clean.module.startupnewstest" description="cleanup module">
    <delete dir="${startupnewstest.output.dir}"/>
    <delete dir="${startupnewstest.testoutput.dir}"/>
  </target>
</project>